generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    Int       @default(1)
  Booking   Booking[]
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Permissions Permission[]
  User        User[]
}

model Permission {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  roles     Role     @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roleId    Int
}

model Event {
  id                Int       @id @default(autoincrement())
  title             String
  location          String
  isTicketAvailable Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  Booking           Booking[]
}

model Booking {
  id        Int      @id @default(autoincrement())
  canceled  Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  eventId   Int
}
 